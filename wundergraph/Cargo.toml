[package]
name = "wundergraph"
version = "0.1.2"
authors = ["Georg Semmler <georg_semmler_05@web.de>"]
license = "MIT OR Apache-2.0"
autotests = false
edition = "2018"
repository = "https://github.com/weiznich/wundergraph"
readme = "../README.md"
keywords = ["GraphQL", "ORM", "PostgreSQL", "SQLite"]
categories = ["database", "web-programming"]
description = "A GraphQL ORM build on top of diesel"

[dependencies]
serde = "1"
diesel = { version = "1.4", features = ["r2d2"], default-features = false}
juniper = "0.14"
indexmap = "1"
uuid_internal = { version = "0.7", optional = true, package = "uuid" }
chrono_internal = { version = "0.4", optional = true, package = "chrono" }
log = { version = "0.4", optional = true }
paste = "0.1"
thiserror = "1"

[dependencies.wundergraph_derive]
version = "0.1"
path = "../wundergraph_derive"


[dev-dependencies]
wundergraph_example = { path = "../wundergraph_example", default-features = false }
wundergraph_bench = { path = "../wundergraph_bench", default-features = false }
diesel_migrations = "1.4.0"
serde_json = "1"
criterion = "0.3"
lazy_static = "1"
insta = "0.12"

[features]
default = []
debug = ["wundergraph_derive/debug", "log"]
mysql = ["diesel/mysql", "wundergraph_derive/mysql"]
sqlite = ["diesel/sqlite", "wundergraph_derive/sqlite"]
postgres = ["diesel/postgres", "wundergraph_derive/postgres"]
extras = ["uuid", "chrono"]
uuid = ["uuid_internal", "diesel/uuidv07"]
chrono = ["chrono_internal", "diesel/chrono"]

[[test]]
name = "integration_tests"
path = "tests/lib.rs"
harness = true

[[bench]]
name = "queries"
path = "bench/queries.rs"
harness = false
